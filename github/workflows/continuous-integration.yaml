name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - review_requested
      - ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linter-test:
    name: 'Linter Test'
    runs-on: docker
    container: node:20.2.0-alpine3.18

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies for test
        run: |
          apk update && apk add --no-cache tar
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Run Linter
        run: yarn lint

  build-test:
    name: 'Build Test'
    runs-on: docker
    container: node:20.2.0-alpine3.18

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install container dependencies
        run: |
          apk update && apk add --no-cache tar
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Run build
        run: yarn build

  continuous-integration-tests:
    name: 'Continuous Integration Tests'
    runs-on: docker
    container: node:20.2.0-alpine3.18
    env:
      ENV: test
      DATABASE: '{"username": "postgres", "password": "password123", "host": "postgres", "port": "5432", "dbname": "postgres"}'
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    needs: [linter-test, build-test]
    if: ${{ !github.event.pull_request.draft }}

    services:
      postgres:
        image: postgres:15.3-alpine3.18
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password123
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install container dependencies
        run: |
          apk update && apk add --no-cache tar postgresql
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Run tests
        run: yarn test
